title: Class prerequisites
tagline: Meet all the prerequisites for an upcoming class
description: Meet all the prerequisites for an upcoming class
template:
  name: prerequisites
  repo: scratch
before:
- type: createIssue
  title: Supported browser
  body: welcome.md
  comments:
  - browser.md

# Repo artifacts:
# 1. Issue: Supported browser
# 2. Issue: Locate your shell
# 3. Issue: Install Git
# 4. Issue: Try a clone
# 5. Issue: Try a push
# 6. Issue: Pick a text editor

steps:

# 1
- title: Use a supported browser
  description: GitHub supports any modern browser, see the list and ensure you're using one.
  link: '{{ repoUrl }}/issues/1'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Supported browser
  - type: gate
    left: '/done|bypass/gim'
    operator: test
    right: '%payload.comment.body%'
    else:
    - type: respond
      with: catch-all.md
  - type: createIssue
    title: Locate your shell
    body: shell.md
    action_id: shellIssue
  - type: respond
    with: goto.md
    data:
      url: '%actions.shellIssue.data.html_url%'
  - type: closeIssue


# 2
- title: Locate your shell
  description: We'll do all classwork in your shell. Let's locate it. 
  link: '{{ repoUrl }}/issues/2'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Locate your shell
  - type: gate
    left: '/done|bypass/gim'
    operator: test
    right: '%payload.comment.body%'
    else:
    - type: respond
      with: catch-all.md
  - type: createIssue
    title: Install Git
    body: check-git.md
    action_id: gitIssue
  - type: respond
    with: goto.md
    data:
      url: '%actions.gitIssue.data.html_url%'
  - type: closeIssue


# 3
- title: Check for Git
  description: You'll need Git. Let's ensure you have the right version before class.
  link: '{{ repoUrl }}/issues/3'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Install Git
  - type: gate
    gates:
    - left: '/done|bypass/gim'
      operator: test
      right: '%payload.comment.body%'
    - left: '/[2-9]+\.\d+\.\d+/gm'
      operator: test
      right: '%payload.comment.body%'
    else:
    - type: respond
      with: no-version.md
  - type: createIssue
    title: Try a clone
    body: try-clone.md
    data:
      cloneURL: '%payload.repository.clone_url%'
      repoName: '%payload.repository.name%'
    action_id: cloneIssue
  - type: respond
    with: version-success.md
    data:
      url: '%actions.cloneIssue.data.html_url%'
  - type: closeIssue

# 4
- title: Clone the repository
  description: We'll perform a clone to test that you won't have any issues when the day of  class comes.
  link: '{{ repoUrl }}/issues/4'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Try a clone
  - type: gate
    gates:
    - left: '/You appear to have cloned an empty repository./gm'
      operator: test
      right: '%payload.comment.body%'
    - left: '/, done./gm'
      operator: test
      right: '%payload.comment.body%'
    - left: '/done|bypass/gim'
      operator: test
      right: '%payload.comment.body%'
    else:
    - type: respond
      with: no-clone.md
      data:
        sshUrl: '%payload.repository.ssh_url%'
  - type: createIssue
    title: Try a push
    body: push.md
    action_id: cloneIssue
    data:
      repoName: '%payload.repository.name%'
  - type: respond
    with: cloned.md
    data:
      url: '%actions.cloneIssue.data.html_url%'
  - type: closeIssue


# 5
- title: Push to the repository
  description: Let's perform a test push to your cloned repository. 
  link: '{{ repoUrl }}/issues/5'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Try a push
  - type: gate
    gates:
    - left: '/Writing objects: \d+%.*, done/gm'
      operator: test
      right: '%payload.comment.body%'
    - left: '/done|bypass/gim'
      operator: test
      right: '%payload.comment.body%'
    else:
    - type: respond
      with: proxy.md
      data:
        repoName: '%payload.repository.name%'
  - type: createIssue
    title: Pick a text editor
    body: editor.md
    action_id: editorIssue
  - type: respond
    with: pushed.md
    data:
      url: '%actions.editorIssue.data.html_url%'
  - type: closeIssue

# 6
- title: Use a recommended text editor
  description: Git can be used with any text editor. Let's take a look at some recommended ones. 
  link: '{{ repoUrl }}/issues/6'
  event: issue_comment.created
  actions:
  - type: gate
    left: '%payload.issue.title%'
    operator: ===
    right: Pick a text editor
  - type: gate
    left: '/done|bypass/gim'
    operator: test
    right: '%payload.comment.body%'
    else:
    - type: respond
      with: catch-all.md
  - type: createIssue
    title: Congratulations
    body: congratulations.md
    action_id: congratulationsIssue
  - type: respond
    with: goto.md
    data:
      url: '%actions.congratulationsIssue.data.html_url%'
  - type: closeIssue
